#!/usr/bin/env bash
set -eo pipefail
APP="$1"; IMAGE="app/$APP"
APP_ROOT="$DOKKU_ROOT/$APP"
APP_PS="$APP_ROOT/PS"

# Check if app has a PS file
# if not default to "web=1"
if [ ! -f "$APP_PS" ]; then
  echo "web=1" > $APP_PS
fi

echo "run-deploy $APP"

function ps_each(){
  CMD="$1"; APP="$2"; NAME="$3"; NUM="$4"
  for ((i=1; i<=$NUM; i++)); do
    echo "sudo $CMD dokku-ps APP=$APP NAME=$NAME SEQ=$i"
    sudo $CMD dokku-ps APP=$APP NAME=$NAME SEQ=$i || {
      # echo " -- failed with exit $? --"
      true # don't skip the rest if one was already stopped/started
    }
  done
}

while read line; do
  NAME=${line%%=*}
  NUM=${line#*=}

  echo "run deploy $APP.$NAME=$NUM"

  # stop any running processes first otherwise
  # `docker kill` will just make it restart
  ps_each stop $APP $NAME $NUM || true

  # create a container for each process
  for ((i=1; i<=$NUM; i++)); do
    # remove container if already exists
    # outputs the id if existed, nothing otherwise
    docker kill "$APP.$NAME.$i" > /dev/null
    docker rm "$APP.$NAME.$i" > /dev/null

    # create a named container using `docker run`
    id=$(docker run -d -name "$APP.$NAME.$i" -p 5000 -e PORT=5000 $IMAGE /start $NAME)

    # TODO make sure it started?

    # stop the container again (to be started using upstart instead)
    docker stop $id > /dev/null # outputs the id if existed, nothing otherwise
  done

  echo "-----> Starting $NAME"
  ps_each start $APP $NAME $NUM
  echo "       $NUM processes up and running"
done < $APP_PS